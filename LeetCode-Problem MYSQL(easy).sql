--Problem 175: Combine Two Tables
SELECT P.FIRSTNAME, P.LASTNAME, A.CITY, A.STATE
FROM PERSON P
LEFT JOIN ADDRESS A 
ON P.PERSONID = A.PERSONID;

--Problem 181. Employees Earning More Than Their Managers
SELECT E.NAME
AS EMPLOYEE
FROM EMPLOYEE E
JOIN EMPLOYEE M
ON E.MANAGERID = M.ID
WHERE E.SALARY > M.SALARY;

--Problem 182. Duplicate Emails
SELECT EMAIL
FROM PERSON
GROUP BY EMAIL
HAVING COUNT(EMAIL) > 1;

--Problem 183. Customers Who Never Order
SELECT C.NAME AS Customers
FROM CUSTOMERS C
LEFT JOIN ORDERS O
ON C.ID = O.CUSTOMERID
WHERE O.ID IS NULL;

--Problem 196. Delete Duplicate Emails
DELETE P 
FROM PERSON P
JOIN (
    SELECT MIN(ID) AS MIN_ID, EMAIL
    FROM PERSON
    GROUP BY EMAIL
) AS MIN_EMAILS
ON P.EMAIL = MIN_EMAILS.EMAIL
WHERE P.ID > MIN_EMAILS.MIN_ID;

--Problem 197. Rising Temperature
SELECT W1.ID
FROM WEATHER W1
INNER JOIN WEATHER W2
WHERE DATEDIFF(W1.RECORDDATE, W2.RECORDDATE) = 1
AND W1.TEMPERATURE > W2.TEMPERATURE;

--Problem 511. Game Play Analysis I
SELECT PLAYER_ID, MIN(EVENT_DATE) AS FIRST_LOGIN
FROM ACTIVITY A1
GROUP BY PLAYER_ID;

--Problem 577. Employee Bonus
SELECT E.NAME, B.BONUS
FROM EMPLOYEE E
LEFT JOIN BONUS B
ON E.EMPID = B.EMPID
WHERE B.BONUS < 1000
OR E.EMPID NOT IN (
    SELECT E.EMPID 
    FROM EMPLOYEE E
    INNER JOIN BONUS B
    ON E.EMPID = B.EMPID
);

--Problem 584. Find Customer Referee
SELECT NAME 
FROM CUSTOMER 
WHERE REFEREE_ID NOT IN (
    SELECT REFEREE_ID
    FROM CUSTOMER
    WHERE REFEREE_ID LIKE "2"
) OR REFEREE_ID IS NULL;

--Problem 586. Customer Placing the Largest Number of Orders
SELECT CUSTOMER_NUMBER
FROM ORDERS
GROUP BY CUSTOMER_NUMBER
ORDER BY COUNT(DISTINCT ORDER_NUMBER) DESC
LIMIT 1;

--Problem 595. Big Countries
SELECT W.NAME, W.POPULATION, W.AREA
FROM WORLD W
WHERE W.AREA >= 3000000
OR W.POPULATION >= 25000000;

--Problem 596. Classes More Than 5 Students
SELECT CLASS 
FROM COURSES
GROUP BY CLASS
HAVING COUNT(DISTINCT STUDENT) >= 5;

--Problem 607. Sales Person
SELECT S.NAME 
FROM SALESPERSON S 
WHERE S.SALES_ID NOT IN (
    SELECT O.SALES_ID 
    FROM ORDERS O
    LEFT JOIN COMPANY C
    ON O.COM_ID = C.COM_ID
    WHERE C.NAME LIKE "RED"
) OR S.SALES_ID NOT IN (
    SELECT SALES_ID FROM ORDERS
);

--Problem 610. Triangle Judgement
SELECT X,Y,Z, IF(X+Y>Z AND X+Z>Y AND Y+Z>X, "Yes", "No") AS triangle
FROM TRIANGLE;

--Problem 619. Biggest Single Number
SELECT MAX(NUM) AS NUM
FROM MYNUMBERS 
WHERE NUM IN (
    SELECT NUM 
    FROM MYNUMBERS
    GROUP BY NUM
    HAVING COUNT(*) = 1
);

--Problem 620. Not Boring Movies
SELECT *
FROM CINEMA
WHERE ID % 2 = 1 AND DESCRIPTION NOT LIKE "BORING" 
ORDER BY RATING DESC;

--Problem 627. Swap Salary
UPDATE SALARY
SET SEX = CASE WHEN SEX="m" THEN "f" ELSE "m" END;

--Problem 1050. Actors and Directors Who Cooperated At Least Three Times
SELECT ACTOR_ID, DIRECTOR_ID
FROM ACTORDIRECTOR
GROUP BY ACTOR_ID, DIRECTOR_ID
HAVING COUNT(*) >= 3;

--Problem 1068. Product Sales Analysis I
SELECT P.PRODUCT_NAME, S.YEAR, S.PRICE
FROM SALES S
LEFT JOIN PRODUCT P
ON S.PRODUCT_ID = P.PRODUCT_ID;

--Problem 1075. Project Employees I
SELECT P.PROJECT_ID,
ROUND(AVG(E.EXPERIENCE_YEARS), 2) AS AVERAGE_YEARS 
FROM PROJECT P
LEFT JOIN EMPLOYEE E
ON P.EMPLOYEE_ID = E.EMPLOYEE_ID
GROUP BY P.PROJECT_ID;

--Problem 1148. Article Views I
SELECT DISTINCT AUTHOR_ID AS ID 
FROM VIEWS 
WHERE AUTHOR_ID = VIEWER_ID
ORDER BY ID ASC;

--Problem 1327. List the Products Ordered in a Period
SELECT PRODUCT_NAME, SUM(UNIT) AS UNIT
FROM PRODUCTS
INNER JOIN ORDERS
USING (PRODUCT_ID)
WHERE MONTH(ORDER_DATE) = 2 
AND YEAR(ORDER_DATE) = 2020
GROUP BY PRODUCT_NAME
HAVING UNIT >= 100;

--Problem 1484. Group Sold Products By The Date
SELECT SELL_DATE, 
    COUNT(DISTINCT PRODUCT) AS NUM_SOLD, 
    GROUP_CONCAT(
        DISTINCT PRODUCT
        ORDER BY PRODUCT
        SEPARATOR ','
    ) AS PRODUCTS
FROM ACTIVITIES
GROUP BY SELL_DATE
ORDER BY SELL_DATE, PRODUCT;

--Problem 1517. Find Users With Valid E-Mails
SELECT * 
FROM USERS 
WHERE MAIL REGEXP '^[A-Za-z][A-Za-z0-9_\.\-]*@leetcode[.]com';

--Problem 1633. Percentage of Users Attended a Contest
SELECT CONTEST_ID, ROUND(COUNT(USER_ID)*100/(
    SELECT COUNT(USER_ID) FROM USERS),
    2
) AS PERCENTAGE
FROM REGISTER
GROUP BY CONTEST_ID
ORDER BY PERCENTAGE DESC, CONTEST_ID ASC;

--Problem 1667. Fix Names in a Table
SELECT USER_ID,
    CONCAT(
        UPPER(SUBSTRING(NAME,1,1)),
        LOWER(SUBSTRING(NAME,2))
    ) AS NAME
FROM USERS
ORDER BY USER_ID;

--Problem 1731. The Number of Employees Which Report to Each Employee
SELECT 
    E1.EMPLOYEE_ID, 
    E1.NAME, 
    COUNT(E2.EMPLOYEE_ID) AS REPORTS_COUNT,
    ROUND(AVG(E2.AGE)) AS AVERAGE_AGE
FROM EMPLOYEES E1
INNER JOIN EMPLOYEES E2
ON E1.EMPLOYEE_ID = E2.REPORTS_TO
GROUP BY E1.EMPLOYEE_ID, E1.NAME
ORDER BY E1.EMPLOYEE_ID;

--Problem 1757. Recyclable and Low Fat Products
SELECT PRODUCT_ID 
FROM PRODUCTS 
WHERE LOW_FATS LIKE "Y"
AND RECYCLABLE LIKE "Y";

--Problem 1873. Calculate Special Bonus
SELECT EMPLOYEE_ID, 
CASE WHEN EMPLOYEE_ID % 2 = 1 AND NAME NOT LIKE 'M%' THEN SALARY ELSE 0 END AS BONUS
FROM EMPLOYEES
ORDER BY EMPLOYEE_ID;

--Problem 1978. Employees Whose Manager Left the Company
SELECT EMPLOYEE_ID
FROM EMPLOYEES
WHERE SALARY < 30000
AND MANAGER_ID NOT IN (
    SELECT EMPLOYEE_ID
    FROM EMPLOYEES
    ORDER BY EMPLOYEE_ID
)
ORDER BY EMPLOYEE_ID;
